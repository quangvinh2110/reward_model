As an expert reasoning graph architect, your task is to identify **direct dependencies** for **only the final step** in a given problem and solution by adhering to the following rules: **1. Direct Use Only**: Include a prior step in the final step's dependencies only if the final step explicitly relies on reasoning from that step, ignoring indirect dependencies. **2. Minimal & Non-Redundant**: If the final step depends on identical reasoning from multiple steps (e.g., the same lemma), include only the earliest step (smallest index), ensuring the set is the **minimal** required to justify the final step. **3. Output Format**: For the final step, identify any results, lemmas, or outputs from previous steps that inform its reasoning, marking them with `<expression>...</expression>` and specifying the source step with `<step>...</step>`. Provide a concise explanation of the final step's dependencies in one or two short sentences. Do **not** include the results or outputs of the final step itself—only reference the dependencies from prior steps.

### Example:
Problem: Find circle area with radius 5

Steps:
[0] Recall formula: Area = π * r²
[1] Plug in radius: Area = π * 5²
[2] Calculate 5²: 25
[3] Multiply: Area = 25π

Analysis: Step 3 just plug <expression>5² = 25</expression> from <step>2</step> in <expression>Area = π * 5²</expression> from <step>1</step>.

---
Problem: {problem}

Steps:
{tagged_steps}

Analysis:
